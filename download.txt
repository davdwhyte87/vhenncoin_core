
White paper

Ideas...

features
- users should be able to create public wallets
- wallet balances should be private even to node owners
- users should be able to get balance
- users should be able to send transfer request from one wallet to another
- users should be able to accept transfer request
- users should be able to create private wallets
- users should be able to transfer to public wallets
- users should be able to accept all transactions

Economics
the price is determined by demand and supply

there are 10trillion coins in total and more can be created if all the nodes come together
to create more

transaction fees is %1 of amount sent, and it's sent to the


Management proof of stake

Technical

Private key is generated by hashing random numbers
public key 1 is generated by hashing private key
public key is only used once.
public key is h(pk1,pk2,pk3,pk4)
private key is h(r1,r2,r3,r4)
public key 1 is h(pk1,pk2,pk3,pk4,0)
public key 2 is h(pk1,pk2,pk3,pk4,1)
public key 3 is h(pk1,pk2,pk3,pk4,2) .... etc

signature is prk1,prk2

receiver derives public key from prk1 and prk2 because he has pubk2,pubk3
he should only have those 2

full public key is used to sign message h(pubk1, pubk2,pubk3,pubk4)
but the receiver cannot sign message because he has only two public keys
once he uses private key to get public key he can sign the message to make sure


node discovery
we need to keep the network at a reasonable size
nodelist has a list of nodes

node gets a seed node, it gets all the node list from the seed node and randome other nodes from the seed node, then
it comes to a consensus on the right node list

all the nodes have an encrypted pass word that they share.
all the nodes encrypt some data with their public key


node sync 
- seed_node.json in config 
- read sead 
- send a message to get each wallet list
- do consensus on this wallet list to build an actual truthful wallet list
- for each of the wallets, get last block 

